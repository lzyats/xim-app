plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.platform.alpaca"
    buildToolsVersion = '34.0.0'
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.platform.alpaca"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        // 个推配置 abcdefg
        manifestPlaceholders = [
            GETUI_APPID:"PAwNNOUaZ21EYtiLkBr8EA"
        ]
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file('app.jks')
            storePassword 'lijiangkkk'
            keyAlias 'app'
            keyPassword 'lijiangkkk'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            // 混淆
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro", "proguard.cfg"
            // 平台
            // arm64-v8a(表示第8代64位ARM处理器)
            // armeabi-v7a(表示第7代及以上32位ARM处理器)
            // armeabi(表示第5代和第6代32位ARM处理器)
            ndk {
                abiFilters 'armeabi-v7a' // 'armeabi','armeabi-v7a','arm64-v8a','x86','x86-64'
            }
        }
        debug {
            manifestPlaceholders = [applicationName: "android.app.Application"]
        }
        build {
            manifestPlaceholders = [applicationName: "android.app.Application"]
        }
    }
     // 此处配置必须添加 否则无法正确运行
    aaptOptions {
        additionalParameters '--auto-add-overlay'
        // noCompress 'foo', 'bar'
        ignoreAssetsPattern "!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~"
    }
}

flutter {
    source '../..'
}
// 导入 arr 需要的配置
repositories {
    flatDir {
        dirs 'libs'
    }
}
dependencies {
    // 个推SDK
    implementation 'com.getui:gtsdk:3.3.7.0'
    implementation 'com.getui:gtc:3.2.16.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation project(':flutter_ringtone_player')
    // libs UniMPSDK
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree(include: ['*.aar'], dir: 'libs')
    // 必须添加的依赖
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.alibaba:fastjson:1.2.83'
    implementation 'com.facebook.fresco:fresco:1.13.0'
    implementation 'com.facebook.fresco:animated-gif:1.13.0'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'androidx.webkit:webkit:1.3.0'
}

